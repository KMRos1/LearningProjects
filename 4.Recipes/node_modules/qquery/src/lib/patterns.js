import {
    isObject,
    forEachEntry,
    forEach
} from "lightdash";

/**
 * The common "if val, then loop, else return first" jQuery pattern
 *
 * @private
 * @param {Object} ctx
 * @param {any} val
 * @param {Function} fn1
 * @param {Function} fn2
 * @returns {any}
 */
const twoWays = function (ctx, val, fn1, fn2) {
    if (val === null) {
        return fn1(ctx[0]);
    } else {
        forEach(ctx, item => {
            fn2(item, val);
        });

        return ctx;
    }
};

/**
 * More advanced version of twoWays
 *
 * @private
 * @param {Object} ctx
 * @param {string|Object} key
 * @param {any} val
 * @param {Function} fn1
 * @param {Function} fn2
 * @returns {any}
 */
const twoWaysMultiple = function (ctx, key, val, fn1, fn2) {
    if (isObject(key)) {
        forEachEntry(key, (entryVal, entryKey) => {
            forEach(ctx, item => {
                fn2(item, entryKey, entryVal);
            });
        });

        return ctx;
    } else if (val === null) {
        return fn1(ctx[0], key);
    } else {
        forEach(ctx, item => {
            fn2(item, key, val);
        });

        return ctx;
    }
};

export {
    twoWays,
    twoWaysMultiple
};
